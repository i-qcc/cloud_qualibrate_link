[project]
name = "iqcc-qualibrate2cloud"
version = "0.1.1"
description = "A tool to upload Qualibrate experiment data to IQCC cloud storage"
authors = [
    {name = "Omrie Ovdat", email = "omrie.ovdat@quantum-machines.co"}
]
requires-python = ">=3.11"
license = {text = "BSD3"}
classifiers = [
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Intended Audience :: Science/Research",
    "Intended Audience :: Education",
    "License :: OSI Approved :: BSD License",
    "Topic :: Scientific/Engineering",
    "Topic :: Scientific/Engineering :: Physics",
    "Development Status :: 3 - Alpha",
]
dependencies = [
    "iqcc-cloud-client>=0.13.4",
]

[project.readme]
file = "README.md"
content-type = "text/markdown"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build]
exclude = [
  "test",
  "tests",
  "*/test",
  "*/tests"
]

[tool.hatch.build.targets.sdist]
include = [
    "*.py",
    "*.pickle"
]

[tool.uv]
prerelease = "allow"

[tool.ruff]
# Exclude a variety of commonly ignored directories.
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".ipynb_checkpoints",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pyenv",
    ".pytest_cache",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    ".vscode",
    "__pypackages__",
    "_build",
    "buck-datatypeout",
    "build",
    "dist",
    "node_modules",
    "site-packages",
    "venv",
    "demo",
    "test"
]

# Same as Black.
line-length = 80
indent-width = 4

target-version = "py311"

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.ruff.lint]
# Enable Pyflakes (`F`) and a subset of the pycodestyle (`E`)  codes by default.
# Unlike Flake8, Ruff doesn't enable pycodestyle warnings (`W`) or
# McCabe complexity (`C901`) by default.
select = ["E4", "E7", "E9", "F"]
ignore = []

# Allow fix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]
unfixable = []

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.format]
# Like Black, use double quotes for strings.
quote-style = "double"

# Like Black, indent with spaces, rather than tabs.
indent-style = "space"

# Like Black, respect magic trailing commas.
skip-magic-trailing-comma = false

# Like Black, automatically detect the appropriate line ending.
line-ending = "auto"

# Enable auto-formatting of code examples in docstrings. Markdown,
# reStructuredText code/literal blocks and doctests are all supported.
#
# This is currently disabled by default, but it is planned for this
# to be opt-out in the future.
docstring-code-format = true

# Set the line length limit used when formatting code snippets in
# docstrings.
#
# This only has an effect when the `docstring-code-format` setting is
# enabled.
docstring-code-line-length = "dynamic"

[dependency-groups]
dev = [
    "pytest>=8.4.2",
]
